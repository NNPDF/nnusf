# A Github workflow that automatically run a fit
name: Automatically perform a fit

# Define events when the workflow should be triggered or
# manually triggered through the `workflow_dispatch`
on:
  push:
  workflow_dispatch:

# Define global environment variables
env:
  NUMBER_REPLICAS: 4
  OUTPUT_FOLDER: bot_runcard
  PLOT_FOLDER: PLOTS
  REPORT_TITLE: REPORT
  AUTHOR_NAME: FITBOT
  KEYWORDS: CHECK
  POETRY: https://install.python-poetry.org
  FITCARD: ./runcards/bot_runcard.yml
  PLOTCARD: ./runcards/plot_runcard.yml


jobs:
  build:
    if: contains(github.event.pull_request.labels.*.name, 'run-fit-bot')
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          # tags needed for dynamic versioning
          fetch-depth: 0
      - name: Install and configure Poetry üêç
        uses: snok/install-poetry@v1 
        with:
          virtualenvs-create: false
          installer-parallel: true
      - name: Install dependencies üì¶
        run: poetry install --no-interaction --no-root --with test ${{ inputs.poetry-extras }}
      - name: Install project üî®
        # it is required to repeat extras, otherwise they will be removed from
        # the environment
        run: poetry install --no-interaction ${{ inputs.poetry-extras }}

      - name: Perform a fit üöÄ
        shell: bash --login {0}
        run: |
          mkdir $OUTPUT_FOLDER
          for ((i=1; i<=$NUMBER_REPLICAS; i+=1))
          do
            nnu fit run $FITCARD $i
          done

      - name: Install base texlive üî®
        shell: bash --login {0}
        run: sudo apt-get install texlive texlive-science dvipng texlive-latex-extra texlive-fonts-recommended cm-super

      - name: Generate fit report üìò
        shell: bash --login {0}
        run: |
          nnu report generate $OUTPUT_FOLDER -t $REPORT_TITLE -a $AUTHOR_NAME -k $KEYWORDS

      - name: Upload the reports into the server üöÄ
        shell: bash --login {0}
        run: |
          export COMMIT=`git rev-parse --short HEAD`
          export TIMESTAMP=`date +"%Y-%m-%dT%H-%M-%S"`
          echo "OUTNAME=report-$COMMIT-$TIMESTAMP" >> $GITHUB_ENV
          mv output "report-$COMMIT-$TIMESTAMP"
          scp -r "report-$COMMIT-$TIMESTAMP" ${{ secrets.USER }}@${{ secrets.ADDR }}:/home/nnpdf/WEB/NNUSF/botfits


      - name: Update PR with some comments üìÆ
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            :robot: The reports from the fits are now ready :robot: !

            Report is available in: https://data.nnpdf.science/NNUSF/botfits/${{ env.OUTNAME }}
